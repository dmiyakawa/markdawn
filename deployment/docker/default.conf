# Markdown Editor - Nginx Server Configuration
# Single Page Application (SPA) with optimized caching and security

server {
    listen 8080;
    server_name _;
    root /usr/share/nginx/html;
    index index.html;
    
    # Apply rate limiting
    limit_req zone=general burst=20 nodelay;
    
    # Security Headers (specific to this server)
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;
    
    # Main application route - SPA support
    location / {
        try_files $uri $uri/ /index.html;
        
        # Cache control for HTML files
        add_header Cache-Control "public, max-age=3600, must-revalidate";
        
        # CORS headers if needed (adjust as necessary)
        add_header Access-Control-Allow-Origin "*";
        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
        add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range";
    }
    
    # Static assets with long-term caching
    location /assets/ {
        expires 1y;
        add_header Cache-Control "public, max-age=31536000, immutable";
        
        # Serve pre-compressed files if available
        gzip_static on;
        
        # CORS for assets
        add_header Access-Control-Allow-Origin "*";
        add_header Access-Control-Allow-Methods "GET, OPTIONS";
    }
    
    # Favicon and other root-level static files
    location ~* \.(ico|svg|png|jpg|jpeg|gif|webp)$ {
        expires 30d;
        add_header Cache-Control "public, max-age=2592000";
        
        # Optional: serve default favicon if not found
        try_files $uri /vite.svg;
    }
    
    # Font files
    location ~* \.(woff|woff2|ttf|otf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, max-age=31536000, immutable";
        add_header Access-Control-Allow-Origin "*";
    }
    
    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
    
    # API endpoints (if any are added in the future)
    location /api/ {
        limit_req zone=api burst=30 nodelay;
        
        # Proxy to backend service (placeholder for future use)
        # proxy_pass http://backend;
        # proxy_set_header Host $host;
        # proxy_set_header X-Real-IP $remote_addr;
        # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        # proxy_set_header X-Forwarded-Proto $scheme;
        
        # For now, return 404 since we don't have backend APIs
        return 404;
    }
    
    # Security: Deny access to sensitive files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    location ~ \.(env|git|htaccess|htpasswd|ini|log|sh|sql|conf|yml|yaml)$ {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Block common attack patterns
    location ~* (wp-admin|wp-login|phpmyadmin|admin|administrator) {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Robots.txt (allow all for markdown editor)
    location = /robots.txt {
        add_header Content-Type text/plain;
        return 200 "User-agent: *\nAllow: /\n";
    }
    
    # Handle missing files gracefully
    error_page 404 /index.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /50x.html {
        root /usr/share/nginx/html;
        internal;
    }
}